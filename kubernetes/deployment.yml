# Deployment que contiene ambas aplicaciones en el mismo pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aplicacion
  labels:
    app: aplicacion
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aplicacion
  template:
    metadata:
      labels:
        app: aplicacion
    spec:
      containers:
      # Contenedor de la aplicaci√≥n legacy
      - name: app-legacy
        image: final_ds-app-legacy:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 5000
        env:
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_DB
      # Contenedor del microservicio
      - name: new-microservice
        image: final_ds-new-microservice:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 5001
        env:
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_DB
        - name: API_KEY
          valueFrom:
            configMapKeyRef:
              name: microservice-config
              key: API_KEY
        - name: LEGACY_APP_URL
          value: "http://localhost:5000"  # Misma instancia de pod
